definitions:
  api.ServiceResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      hospitalID:
        type: integer
      name:
        type: string
      specialtyID:
        type: integer
    type: object
  api.academicCalendarEventResponse:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
      type:
        type: string
    type: object
  api.academicYearResponse:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  api.blockResponse:
    properties:
      academic_year_id:
        type: integer
      created_at:
        type: string
      name:
        type: string
      period:
        type: integer
    type: object
  api.createAcademicYearRequest:
    properties:
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    required:
    - end_date
    - name
    - start_date
    type: object
  api.createGroupToBlockRequest:
    properties:
      academic_year_name:
        type: string
      block_name:
        type: string
      group_name:
        type: string
    type: object
  api.createStudentToGroupRequest:
    properties:
      academic_year_name:
        type: string
      group_name:
        type: string
      studentName:
        type: string
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      role_name:
        type: string
    required:
    - email
    - password
    - role_name
    type: object
  api.getAcademicCalendarResponse:
    properties:
      academic_calendar_events:
        items:
          $ref: '#/definitions/api.academicCalendarEventResponse'
        type: array
      academic_year:
        $ref: '#/definitions/api.academicYearResponse'
    type: object
  api.groupResponse:
    properties:
      academic_year_id:
        type: integer
      created_at:
        type: string
      name:
        type: string
    type: object
  api.groupToBlockResponse:
    properties:
      academic_year_name:
        type: string
      block_name:
        type: string
      created_at:
        type: string
      group_name:
        type: string
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.periodResponse:
    properties:
      academic_year_id:
        type: integer
      created_at:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  api.studentToGroupResponse:
    properties:
      academic_year_name:
        type: string
      created_at:
        type: string
      group_name:
        type: string
      studentName:
        type: string
    type: object
  api.userResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      role_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /academic_year:
    post:
      consumes:
      - application/json
      description: create new academic year
      parameters:
      - description: 'input required: academic year name, start date, end date'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createAcademicYearRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.academicYearResponse'
      summary: create new academic year
      tags:
      - AcademicCalendar
  /academic_year/calendar:
    get:
      consumes:
      - application/json
      description: return the list of events of an academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.getAcademicCalendarResponse'
            type: array
      summary: return the list of events of an academic year
      tags:
      - AcademicCalendar
  /academic_year/list:
    get:
      consumes:
      - application/json
      description: list created academic year
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.academicYearResponse'
            type: array
      summary: list created academic year
      tags:
      - AcademicCalendar
  /block/list:
    get:
      consumes:
      - application/json
      description: list blocks in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.blockResponse'
            type: array
      summary: list blocks in that academic year
      tags:
      - Blocks
  /group/list:
    get:
      consumes:
      - application/json
      description: list groups in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.groupResponse'
            type: array
      summary: list groups in that academic year
      tags:
      - Groups
  /group_to_block:
    post:
      consumes:
      - application/json
      description: create new group to block
      parameters:
      - description: 'input required: academic year name, groupid, blockid'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createGroupToBlockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.groupToBlockResponse'
      summary: create new group to block
      tags:
      - GroupToBlock
  /group_to_block/list/academic_year:
    get:
      consumes:
      - application/json
      description: list groups and their blocks in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.groupToBlockResponse'
            type: array
      summary: list groups and their blocks in that academic year
      tags:
      - GroupToBlock
  /group_to_block/list/block:
    get:
      consumes:
      - application/json
      description: list groups in that block
      parameters:
      - description: block name
        in: query
        name: blockName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.groupToBlockResponse'
            type: array
      summary: list groups in that block
      tags:
      - GroupToBlock
  /group_to_block/list/group:
    get:
      consumes:
      - application/json
      description: list group_to_block of that block
      parameters:
      - description: group name
        in: query
        name: groupName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.groupToBlockResponse'
            type: array
      summary: list group_to_block of that block
      tags:
      - GroupToBlock
  /period/list:
    get:
      consumes:
      - application/json
      description: list periods in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.periodResponse'
            type: array
      summary: list periods in that academic year
      tags:
      - Periods
  /service/list/hospital:
    get:
      consumes:
      - application/json
      description: list created service
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.ServiceResponse'
            type: array
      summary: list created service
      tags:
      - Services
  /service/list/specialty:
    get:
      consumes:
      - application/json
      description: list created service
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.ServiceResponse'
            type: array
      summary: list created service
      tags:
      - Services
  /service/list/specialty_and_hospital:
    get:
      consumes:
      - application/json
      description: list created service
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.ServiceResponse'
            type: array
      summary: list created service
      tags:
      - Services
  /student_to_group:
    post:
      consumes:
      - application/json
      description: create new student to group
      parameters:
      - description: 'input required: academic year name, studentid, groupid'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createStudentToGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.studentToGroupResponse'
      summary: create new student to group
      tags:
      - StudentToGroup
  /student_to_group/list/academic_year:
    get:
      consumes:
      - application/json
      description: list students and their groups in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.studentToGroupResponse'
            type: array
      summary: list students and their groups in that academic year
      tags:
      - StudentToGroup
  /student_to_group/list/group:
    get:
      consumes:
      - application/json
      description: list students of that group
      parameters:
      - description: group name
        in: query
        name: groupName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.studentToGroupResponse'
            type: array
      summary: list students of that group
      tags:
      - StudentToGroup
  /student_to_group/list/student:
    get:
      consumes:
      - application/json
      description: list groups of that student
      parameters:
      - description: studentID
        in: query
        name: studentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.studentToGroupResponse'
            type: array
      summary: list groups of that student
      tags:
      - StudentToGroup
  /users:
    post:
      consumes:
      - application/json
      description: upsert wallet address
      parameters:
      - description: create new user request requires username, password, and role
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.userResponse'
      summary: upsert new user
      tags:
      - Authentication
  /users/login:
    post:
      consumes:
      - application/json
      description: upsert wallet address
      parameters:
      - description: login request requires username, password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: upsert new user
      tags:
      - Authentication
swagger: "2.0"
