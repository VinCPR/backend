definitions:
  api.HospitalResponse:
    properties:
      address:
        type: string
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  api.ServiceResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      hospitalID:
        type: integer
      name:
        type: string
      specialtyID:
        type: integer
    type: object
  api.SpecialtyResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  api.StudentResponse:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      mobile:
        type: string
      student_id:
        type: string
      user_id:
        type: integer
    type: object
  api.academicCalendarEventResponse:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
      type:
        type: string
    type: object
  api.academicYearResponse:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  api.blockResponse:
    properties:
      academic_year_id:
        type: integer
      created_at:
        type: string
      name:
        type: string
      period:
        type: integer
    type: object
  api.createAcademicYearRequest:
    properties:
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    required:
    - end_date
    - name
    - start_date
    type: object
  api.createHospitalRequest:
    properties:
      address:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - address
    - description
    - name
    type: object
  api.createServiceRequest:
    properties:
      description:
        type: string
      hospitalID:
        type: integer
      name:
        type: string
      specialtyID:
        type: integer
    required:
    - description
    - hospitalID
    - name
    - specialtyID
    type: object
  api.createSpecialtyRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  api.createStudentRequest:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      mobile:
        type: string
      student_id:
        type: string
      user_id:
        type: integer
    required:
    - firstname
    - lastname
    - mobile
    - student_id
    - user_id
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      role_name:
        type: string
    required:
    - email
    - password
    - role_name
    type: object
  api.getAcademicCalendarResponse:
    properties:
      academic_calendar_events:
        items:
          $ref: '#/definitions/api.academicCalendarEventResponse'
        type: array
      academic_year:
        $ref: '#/definitions/api.academicYearResponse'
    type: object
  api.groupResponse:
    properties:
      academic_year_id:
        type: integer
      created_at:
        type: string
      name:
        type: string
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.periodResponse:
    properties:
      academic_year_id:
        type: integer
      created_at:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  api.userResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      role_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /academic_year:
    post:
      consumes:
      - application/json
      description: create new academic year
      parameters:
      - description: 'input required: academic year name, start date, end date'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createAcademicYearRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.academicYearResponse'
      summary: create new academic year
      tags:
      - AcademicCalendar
  /academic_year/calendar:
    get:
      consumes:
      - application/json
      description: return the list of events of an academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.getAcademicCalendarResponse'
            type: array
      summary: return the list of events of an academic year
      tags:
      - AcademicCalendar
  /academic_year/list:
    get:
      consumes:
      - application/json
      description: list created academic year
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.academicYearResponse'
            type: array
      summary: list created academic year
      tags:
      - AcademicCalendar
  /block/list:
    get:
      consumes:
      - application/json
      description: list blocks in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.blockResponse'
            type: array
      summary: list blocks in that academic year
      tags:
      - Blocks
  /group/list:
    get:
      consumes:
      - application/json
      description: list groups in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.groupResponse'
            type: array
      summary: list groups in that academic year
      tags:
      - Groups
  /hospital:
    post:
      consumes:
      - application/json
      description: create new hospital
      parameters:
      - description: 'input required: hospital name, description, address'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createHospitalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.HospitalResponse'
      summary: create new hospital
      tags:
      - Hospital
  /period/list:
    get:
      consumes:
      - application/json
      description: list periods in that academic year
      parameters:
      - description: academic year name
        in: query
        name: academicYearName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.periodResponse'
            type: array
      summary: list periods in that academic year
      tags:
      - Periods
  /service:
    post:
      consumes:
      - application/json
      description: create new service
      parameters:
      - description: 'input required: service hospitalID, specialtyID, name, description'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ServiceResponse'
      summary: create new service
      tags:
      - Service
  /service/list/hospital:
    get:
      consumes:
      - application/json
      description: list created service
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.ServiceResponse'
            type: array
      summary: list created service
      tags:
      - Services
  /service/list/specialty:
    get:
      consumes:
      - application/json
      description: list created service
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.ServiceResponse'
            type: array
      summary: list created service
      tags:
      - Services
  /service/list/specialty_and_hospital:
    get:
      consumes:
      - application/json
      description: list created service
      parameters:
      - description: page number
        in: query
        name: pageNumber
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/api.ServiceResponse'
            type: array
      summary: list created service
      tags:
      - Services
  /specialty:
    post:
      consumes:
      - application/json
      description: create new specialty
      parameters:
      - description: 'input required: specialty name, description, address'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createSpecialtyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.SpecialtyResponse'
      summary: create new specialty
      tags:
      - Specialty
  /student:
    post:
      consumes:
      - application/json
      description: create new student
      parameters:
      - description: 'input required: student user_id, student_id, firstname, lastname,
          mobile'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createStudentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.StudentResponse'
      summary: create new student
      tags:
      - Student
  /users:
    post:
      consumes:
      - application/json
      description: upsert wallet address
      parameters:
      - description: create new user request requires username, password, and role
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.userResponse'
      summary: upsert new user
      tags:
      - Authentication
  /users/login:
    post:
      consumes:
      - application/json
      description: upsert wallet address
      parameters:
      - description: login request requires username, password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: upsert new user
      tags:
      - Authentication
swagger: "2.0"
