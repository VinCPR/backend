// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateAcademicCalendarEvents implements pgx.CopyFromSource.
type iteratorForCreateAcademicCalendarEvents struct {
	rows                 []CreateAcademicCalendarEventsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateAcademicCalendarEvents) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateAcademicCalendarEvents) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].AcademicYearID,
		r.rows[0].Name,
		r.rows[0].Type,
		r.rows[0].StartDate,
		r.rows[0].EndDate,
	}, nil
}

func (r iteratorForCreateAcademicCalendarEvents) Err() error {
	return nil
}

func (q *Queries) CreateAcademicCalendarEvents(ctx context.Context, arg []CreateAcademicCalendarEventsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"academic_calendar_event"}, []string{"academic_year_id", "name", "type", "start_date", "end_date"}, &iteratorForCreateAcademicCalendarEvents{rows: arg})
}
